:root {
  --control-height: 24px;
  --input-padding-width: 5px;
  --input-padding-height: 3px;

  --background-color: var(--color-white);
  --text-color: var(--color-black);
  --border-color: rgba(0, 0, 0, 0.08);

  --inactive-color: var(--color-black);
  --active-color: var(--color-gold);

  --arrow-width: 6px;
}

/* Core */
.ql-container {
  position: relative;
  height: 100%;
  box-sizing: border-box;

  &.ql-disabled {
    & .ql-tooltip {
      visibility: hidden;
    }
  }
}

.ql-clipboard {
  left: -100000px;
  height: 1px;
  overflow-y: hidden;
  position: absolute;
  top: 50%;

  & p {
    margin: 0;
    padding: 0;
  }
}

.ql-editor {
  height: 100%;
  outline: none;
  overflow-y: auto;

  & > * {
    cursor: text;
  }

  &.ql-blank::before {
    color: var(--color-grey);
    content: attr(data-placeholder);
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
  }
}

/* Toolbar */
.ql-bubble .ql-toolbar {
  background: var(--background-color);
  border: solid 1px var(--border-color);
  box-shadow: var(--shadow-dark);
  border-radius: var(--spacing-xx-tight);

  &:after {
    clear: both;
    content: '';
    display: table;
  }

  & button {
    float: left;
    height: var(--control-height);
    padding: var(--input-padding-height) var(--input-padding-width);
    width: calc(
      var(--control-height) +
        (var(--input-padding-width) - var(--input-padding-height)) * 2
    );
  }

  & svg {
    float: left;
    height: 100%;
  }

  &:active:hover {
    outline: none;
  }

  & input.ql-image[type='file'] {
    display: none;
  }

  & button:hover,
  & button:focus,
  & button.ql-active {
    color: var(--active-color);

    & .ql-fill,
    & .ql-stroke.ql-fill {
      fill: var(--active-color);
    }
    & .ql-stroke,
    & .ql-stroke-miter {
      stroke: var(--active-color);
    }
  }

  /* Fix for iOS not losing hover on touch */
  @media (pointer: coarse) {
    & .ql-bubble .ql-toolbar {
      & button:hover:not(.ql-active) {
        color: var(--inactive-color);

        & .ql-fill,
        & .ql-stroke.ql-fill {
          fill: var(--inactive-color);
        }

        & .ql-stroke,
        & .ql-stroke-miter {
          stroke: var(--inactive-color);
        }
      }
    }
  }
}

.ql-bubble {
  box-sizing: border-box;

  & * {
    box-sizing: border-box;
  }

  & .ql-hidden {
    display: none;
  }

  & .ql-out-bottom,
  & .ql-out-top {
    visibility: hidden;
  }

  & .ql-tooltip {
    position: absolute;
    transform: translateY(10px);
    /* transition: all 0.2s ease-in-out; */

    & a {
      cursor: pointer;
      text-decoration: none;
    }
  }

  & .ql-tooltip.ql-flip {
    transform: translateY(-10px);
  }

  & .ql-formats {
    display: inline-block;
    vertical-align: middle;

    &:after {
      clear: both;
      content: '';
      display: table;
    }
  }

  & .ql-stroke {
    fill: none;
    stroke: var(--inactive-color);
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 2;
  }

  & .ql-stroke-miter {
    fill: none;
    stroke: var(--inactive-color);
    stroke-miterlimit: 10;
    stroke-width: 2;
  }

  & .ql-fill,
  & .ql-stroke.ql-fill {
    fill: var(--inactive-color);
  }

  & .ql-empty {
    fill: none;
  }
  & .ql-even {
    fill-rule: evenodd;
  }

  & .ql-thin,
  & .ql-stroke.ql-thin {
    stroke-width: 1;
  }

  & .ql-transparent {
    opacity: 0.4;
  }

  & .ql-direction {
    & svg:last-child {
      display: none;
    }
  }
  & .ql-direction.ql-active {
    & svg:last-child {
      display: inline;
    }
    & svg:first-child {
      display: none;
    }
  }
}

/* Toolbar - Formats */
.ql-bubble .ql-toolbar .ql-formats {
  margin: var(--spacing-x-tight) var(--spacing-tight);

  & + .ql-formats {
    margin-left: 0;
  }
}

.ql-bubble {
  /* Tooltip - Arrow */
  & .ql-tooltip-arrow {
    display: block;
    position: absolute;
    left: 50%;
    margin-top: 1px;
    margin-left: calc(-1 * var(--arrow-width));
    border-left: var(--arrow-width) solid transparent;
    border-right: var(--arrow-width) solid transparent;

    &::before {
      content: '';
      position: absolute;
      left: calc((var(--arrow-width) + 2px) * -1);
      border-left: calc(var(--arrow-width) + 2px) solid transparent;
      border-right: calc(var(--arrow-width) + 2px) solid transparent;
      z-index: -1;
    }
  }
  & .ql-tooltip:not(.ql-flip) .ql-tooltip-arrow {
    border-bottom: var(--arrow-width) solid var(--background-color);
    top: calc(-1 * var(--arrow-width));

    &::before {
      top: -2px;
      border-bottom: calc(var(--arrow-width) + 2px) solid var(--border-color);
    }
  }
  & .ql-tooltip.ql-flip .ql-tooltip-arrow {
    border-top: var(--arrow-width) solid var(--background-color);
    bottom: calc(-1 * var(--arrow-width));

    &::before {
      bottom: -2px;
      border-top: calc(var(--arrow-width) + 2px) solid var(--border-color);
    }
  }

  /* Tooltip - Editing */
  & .ql-tooltip.ql-editing {
    & .ql-tooltip-editor {
      display: block;
    }

    & .ql-formats {
      visibility: hidden;
    }
  }

  /* Tooltip - Editor */
  & .ql-tooltip-editor {
    display: none;

    & input[type='text'] {
      position: absolute;
      width: 100%;
      height: 100%;
      padding: var(--spacing-x-tight) var(--spacing-tight);

      color: var(--text-color);
      font-size: var(--font-size-sm);
      background: transparent;
      border: none;
      outline: none;
    }
  }
}
